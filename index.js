// Generated by CoffeeScript 1.10.0
(function() {
  var OSS, getDestination, getFileName, moment, ossStorage;

  moment = require('moment');

  OSS = require('./libs/oss');

  getDestination = function(req, file, cb) {
    return cb(null, '');
  };

  getFileName = function(req, file, cb) {
    return cb(null, moment().format('x'));
  };

  ossStorage = (function() {
    function ossStorage(opts1) {
      this.opts = opts1;
      if (!this.opts.bucket) {
        throw new Error('oss bucket is require!');
      }
      this.oss = OSS(this.opts);
      if ('string' === typeof this.opts.destination) {
        this.getDestination = function($0, $1, cb) {
          return cb(null, this.opts.destination);
        };
      } else {
        this.getDestination = this.opts.destination || getDestination;
      }
      this.getFileName = this.opts.filename || getFileName;
    }

    ossStorage.prototype._handleFile = function(req, file, cb) {
      return this.getDestination(req, file, (function(_this) {
        return function(err, destination) {
          if (err) {
            return cb(err);
          }
          return _this.getFileName(req, file, function(err, filename) {
            var finalPath;
            if (err) {
              return cb(err);
            }
            finalPath = destination + "/" + filename;
            return _this.oss.putStream(finalPath, file.stream, {
              contentLength: file.size
            }).then(function() {
              return cb(null, {
                destination: destination,
                filename: filename,
                path: finalPath
              });
            })["catch"](cb);
          });
        };
      })(this));
    };

    ossStorage.prototype._removeFile = function(req, file, cb) {
      return this.oss["delete"](file.path).then(function() {
        return cb(null);
      })["catch"](cb);
    };

    return ossStorage;

  })();

  module.exports = function(opts) {
    return new ossStorage(opts);
  };

}).call(this);

//# sourceMappingURL=index.js.map
